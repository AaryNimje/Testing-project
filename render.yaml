# render.yaml
services:
  # Backend Flask API
  - type: web
    name: academic-ai-backend
    env: python
    buildCommand: pip install -r requirements.txt
    startCommand: gunicorn app:app
    envVars:
      - key: SECRET_KEY
        generateValue: true
      - key: DATABASE_URL
        fromDatabase:
          name: academic-ai-db
          property: connectionString
      - key: GEMINI_API_KEY
        sync: false
      - key: FLASK_ENV
        value: production
      - key: FLASK_DEBUG
        value: False
      - key: PORT
        value: 5000
      - key: DAILY_REQUEST_LIMIT
        value: 200
      - key: MONTHLY_BUDGET_LIMIT
        value: 4.50
      - key: CACHE_TTL_HOURS
        value: 24
    healthCheckPath: /api/health

  # Frontend Next.js app
  - type: web
    name: academic-ai-frontend
    env: node
    buildCommand: npm install && npm run build
    startCommand: npm start
    envVars:
      - key: NEXT_PUBLIC_API_URL
        value: https://academic-ai-backend.onrender.com/api
      - key: NODE_ENV
        value: production
    buildFilter:
      paths:
        - frontend/**

# Database
databases:
  - name: academic-ai-db
    databaseName: academic_ai
    user: academic_ai_user
    plan: free